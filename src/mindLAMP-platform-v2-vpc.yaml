AWSTemplateFormatVersion: 2010-09-09
Description: mindLAMP Platform v2 VPC networking setup

Parameters:
  ProjectName:
    ConstraintDescription: Project name that will be used as the prefix for all deployed resources
    Default: mindLAMP-platform-v2
    Description: Project name that will be used as the prefix for all deployed resources
    Type: String

  PrivateSubnet1CidrBlock:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    ConstraintDescription: Private Subnet 1 CIDR Block
    Default: 192.168.20.0/24
    Description: Private Subnet 1 CIDR Block
    Type: String

  PrivateSubnet2CidrBlock:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    ConstraintDescription: Private Subnet 2 CIDR Block
    Default: 192.168.21.0/24
    Description: Private Subnet 2 CIDR Block
    Type: String

  PrivateSubnet3CidrBlock:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    ConstraintDescription: Private Subnet 3 CIDR Block
    Default: 192.168.22.0/24
    Description: Private Subnet 3 CIDR Block
    Type: String

  PublicSubnet1CidrBlock:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    ConstraintDescription: Public Subnet 1 CIDR Block
    Default: 192.168.10.0/24
    Description: Public Subnet 1 CIDR Block
    Type: String

  PublicSubnet2CidrBlock:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    ConstraintDescription: Public Subnet 2 CIDR Block
    Default: 192.168.11.0/24
    Description: Public Subnet 2 CIDR Block
    Type: String

  PublicSubnet3CidrBlock:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    ConstraintDescription: Public Subnet 3 CIDR Block
    Default: 192.168.12.0/24
    Description: Public Subnet 3 CIDR Block
    Type: String

  VpcCidrBlock:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    ConstraintDescription: VPC CIDR Block
    Default: 192.168.0.0/16
    Description: VPC CIDR Block
    Type: String

Resources:
  #########################
  #
  # VPC and Subnets
  #
  #########################
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCidrBlock
      EnableDnsHostnames: true
      EnableDnsSupport: true
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-vpc

  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [ 0, !GetAZs  '' ]
      CidrBlock: !Ref PrivateSubnet1CidrBlock
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-private-subnet-1
      VpcId: !Ref VPC

  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [ 1, !GetAZs  '' ]
      CidrBlock: !Ref PrivateSubnet2CidrBlock
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-private-subnet-2
      VpcId: !Ref VPC

  PrivateSubnet3:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [ 2, !GetAZs  '' ]
      CidrBlock: !Ref PrivateSubnet3CidrBlock
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-private-subnet-3
      VpcId: !Ref VPC

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      CidrBlock: !Ref PublicSubnet1CidrBlock
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-public-subnet-1
      VpcId: !Ref VPC

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [ 1, !GetAZs  '' ]
      CidrBlock: !Ref PublicSubnet2CidrBlock
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-public-subnet-2
      VpcId: !Ref VPC

  PublicSubnet3:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [ 2, !GetAZs  '' ]
      CidrBlock: !Ref PublicSubnet3CidrBlock
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-public-subnet-3
      VpcId: !Ref VPC

  #########################
  #
  # Internet and NAT Gateways
  #
  #########################
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-igw

  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC

  NatGateway1EIP:
    Type: AWS::EC2::EIP
    DependsOn: InternetGatewayAttachment
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-nat-gw-1-eip

  NatGateway2EIP:
    Type: AWS::EC2::EIP
    DependsOn: InternetGatewayAttachment
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-nat-gw-2-eip

  NatGateway3EIP:
    Type: AWS::EC2::EIP
    DependsOn: InternetGatewayAttachment
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-nat-gw-3-eip

  NatGateway1:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGateway1EIP.AllocationId
      SubnetId: !Ref PublicSubnet1
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-nat-gw-1

  NatGateway2:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGateway2EIP.AllocationId
      SubnetId: !Ref PublicSubnet2
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-nat-gw-2

  NatGateway3:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGateway3EIP.AllocationId
      SubnetId: !Ref PublicSubnet3
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-nat-gw-3

  #########################
  #
  # Route Tables
  #
  #########################
  PrivateRouteTable1:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-private-rt-1
      VpcId: !Ref VPC

  DefaultPrivateRoute1:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway1
      RouteTableId: !Ref PrivateRouteTable1

  PrivateSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable1
      SubnetId: !Ref PrivateSubnet1

  PrivateRouteTable2:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-private-rt-2
      VpcId: !Ref VPC

  DefaultPrivateRoute2:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway2
      RouteTableId: !Ref PrivateRouteTable2

  PrivateSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable2
      SubnetId: !Ref PrivateSubnet2

  PrivateRouteTable3:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-private-rt-3

  DefaultPrivateRoute3:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway3
      RouteTableId: !Ref PrivateRouteTable3

  PrivateSubnet3RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable3
      SubnetId: !Ref PrivateSubnet3

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: Project
          Value: !Sub ${ProjectName}
        - Key: Name
          Value: !Sub ${ProjectName}-public-rt
      VpcId: !Ref VPC

  DefaultPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
      RouteTableId: !Ref PublicRouteTable

  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet1

  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet2

  PublicSubnet3RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet3

  #########################
  #
  # Parameter Store Parameters
  #
  #########################
  ParamPrivateSubnet1:
    Type: AWS::SSM::Parameter
    Properties:
      Description: Private Subnet 1 Id
      Name: /mindLAMP-platform-v2/vpc/private_subnet_1
      Type: String
      Value: !Ref PrivateSubnet1

  ParamPrivateSubnet2:
    Type: AWS::SSM::Parameter
    Properties:
      Description: Private Subnet 2 Id
      Name: /mindLAMP-platform-v2/vpc/private_subnet_2
      Type: String
      Value: !Ref PrivateSubnet2

  ParamPrivateSubnet3:
    Type: AWS::SSM::Parameter
    Properties:
      Description: Private Subnet 3 Id
      Name: /mindLAMP-platform-v2/vpc/private_subnet_3
      Type: String
      Value: !Ref PrivateSubnet3

  ParamPublicSubnet1:
    Type: AWS::SSM::Parameter
    Properties:
      Description: Public Subnet 1 Id
      Name: /mindLAMP-platform-v2/vpc/public_subnet_1
      Type: String
      Value: !Ref PublicSubnet1

  ParamPublicSubnet2:
    Type: AWS::SSM::Parameter
    Properties:
      Description: Public Subnet 2 Id
      Name: /mindLAMP-platform-v2/vpc/public_subnet_2
      Type: String
      Value: !Ref PublicSubnet2

  ParamPublicSubnet3:
    Type: AWS::SSM::Parameter
    Properties:
      Description: Public Subnet 3 Id
      Name: /mindLAMP-platform-v2/vpc/public_subnet_3
      Type: String
      Value: !Ref PublicSubnet3

  ParamVPC:
    Type: AWS::SSM::Parameter
    Properties:
      Description: VPC Id
      Name: /mindLAMP-platform-v2/vpc/id
      Type: String
      Value: !Ref VPC

Outputs:
  PrivateSubnet1Id:
    Description: Private Subnet 1 Id
    Value: !Ref PrivateSubnet1

  PrivateSubnet2Id:
    Description: Private Subnet 2 Id
    Value: !Ref PrivateSubnet2

  PrivateSubnet3Id:
    Description: Private Subnet 3 Id
    Value: !Ref PrivateSubnet3

  PublicSubnet1Id:
    Description: Public Subnet 1 Id
    Value: !Ref PublicSubnet1

  PublicSubnet2Id:
    Description: Public Subnet 2 Id
    Value: !Ref PublicSubnet2

  PublicSubnet3Id:
    Description: Public Subnet 3 Id
    Value: !Ref PublicSubnet3

  VpcId:
    Description: VPC Id
    Value: !Ref VPC
